package com.taotao.controller;


import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.taotao.common.pojo.EUDataGridResult;
import com.taotao.common.pojo.TaotaoResult;
import com.taotao.pojo.TbItem;
import com.taotao.pojo.TbItemDesc;
import com.taotao.pojo.TbItemParam;
import com.taotao.pojo.TbItemParamItem;
import com.taotao.service.ItemService;

/**
 * 商品管理Controller
 */

@Controller
public class ItemController {

	private Logger log = Logger.getLogger(ItemController.class);
	@Autowired
	private ItemService itemService;
	
	@RequestMapping("/item/{itemId}")
	@ResponseBody
	public TbItem getItemById(@PathVariable Long itemId) {
		TbItem tbItem = itemService.getItemById(itemId);
		return tbItem;
	}
	
	@RequestMapping("/item/list")
	@ResponseBody
	public EUDataGridResult getItemList(Integer page, Integer rows) {
		EUDataGridResult result = itemService.getItemList(page, rows);
		return result;
	}
	
	@RequestMapping(value="/item/save", method=RequestMethod.POST)
	@ResponseBody
	private TaotaoResult createItem(TbItem item, String desc, String itemParams) throws Exception {
		if(FunctUtil.)
		TaotaoResult result = itemService.createItem(item, desc, itemParams);
		return result;
	}
	
	@RequestMapping(value="/item/delete", method=RequestMethod.POST)
	@ResponseBody
	public TaotaoResult deleteItem(@RequestParam(required=true,value="id")String id) throws Exception {
		String ids[]=id.split(",");
		for(String id2:ids){
			itemService.deleteItem(Long.parseLong(id2));
		}
		return TaotaoResult.ok();
	}
	
	@RequestMapping(value="/item/edit/{page}")
	private String showItemList(@PathVariable String page)  {
		return page;
	}


	@RequestMapping(value="/item/update")
	@ResponseBody
	public TaotaoResult updateItem(TbItem item, String desc) {
		
		TaotaoResult result = itemService.updateItem(item, desc);
		return result;
	
	}
	
	@RequestMapping(value="/item/query/desc/{itemId}")
	@ResponseBody
	public TbItemDesc getDescrition(@PathVariable Long itemId) {
		TbItemDesc result = itemService.getItemDescription(itemId);
		log.debug("[debug]: desc "+JSON.toJSONString(result));
		return result;
	
	}
	
	@RequestMapping(value="/item/query/param/{itemId}")
	@ResponseBody
	public TbItemParamItem getItemParam(@PathVariable Long itemId) {
		TbItemParamItem result = itemService.getItemParamItem(itemId);
		return result;
	
	}
	
	@RequestMapping(value="/item/param/list")
	@ResponseBody
	public EUDataGridResult getItemParamList(int page,int rows) {
		EUDataGridResult result = itemService.getItemParamList(page, rows);
		return result;
	
	}
	
	@RequestMapping(value="/item/param/delete")
	@ResponseBody
	public TaotaoResult getItemParamList(String ids) {
		TaotaoResult result = itemService.deleteParam(ids);
		return result;
	
	}
	
	
	
}
